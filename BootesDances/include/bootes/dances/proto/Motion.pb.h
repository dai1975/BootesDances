// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Motion.proto

#ifndef PROTOBUF_Motion_2eproto__INCLUDED
#define PROTOBUF_Motion_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Motion_2eproto();
void protobuf_AssignDesc_Motion_2eproto();
void protobuf_ShutdownFile_Motion_2eproto();

class Motion;
class Motion_Accel;
class Motion_Gyro;
class Motion_WiimoteSimple;
class Motion_WiimoteSimple_Entry;

// ===================================================================

class Motion_Accel : public ::google::protobuf::Message {
 public:
  Motion_Accel();
  virtual ~Motion_Accel();
  
  Motion_Accel(const Motion_Accel& from);
  
  inline Motion_Accel& operator=(const Motion_Accel& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Motion_Accel& default_instance();
  
  void Swap(Motion_Accel* other);
  
  // implements Message ----------------------------------------------
  
  Motion_Accel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Motion_Accel& from);
  void MergeFrom(const Motion_Accel& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required float x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x() const;
  inline void set_x(float value);
  
  // required float y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline float y() const;
  inline void set_y(float value);
  
  // required float z = 3;
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 3;
  inline float z() const;
  inline void set_z(float value);
  
  // @@protoc_insertion_point(class_scope:pb.Motion.Accel)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  float x_;
  float y_;
  float z_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Motion_2eproto();
  friend void protobuf_AssignDesc_Motion_2eproto();
  friend void protobuf_ShutdownFile_Motion_2eproto();
  
  void InitAsDefaultInstance();
  static Motion_Accel* default_instance_;
};
// -------------------------------------------------------------------

class Motion_Gyro : public ::google::protobuf::Message {
 public:
  Motion_Gyro();
  virtual ~Motion_Gyro();
  
  Motion_Gyro(const Motion_Gyro& from);
  
  inline Motion_Gyro& operator=(const Motion_Gyro& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Motion_Gyro& default_instance();
  
  void Swap(Motion_Gyro* other);
  
  // implements Message ----------------------------------------------
  
  Motion_Gyro* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Motion_Gyro& from);
  void MergeFrom(const Motion_Gyro& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required float yaw = 1;
  inline bool has_yaw() const;
  inline void clear_yaw();
  static const int kYawFieldNumber = 1;
  inline float yaw() const;
  inline void set_yaw(float value);
  
  // required float pitch = 2;
  inline bool has_pitch() const;
  inline void clear_pitch();
  static const int kPitchFieldNumber = 2;
  inline float pitch() const;
  inline void set_pitch(float value);
  
  // required float roll = 3;
  inline bool has_roll() const;
  inline void clear_roll();
  static const int kRollFieldNumber = 3;
  inline float roll() const;
  inline void set_roll(float value);
  
  // @@protoc_insertion_point(class_scope:pb.Motion.Gyro)
 private:
  inline void set_has_yaw();
  inline void clear_has_yaw();
  inline void set_has_pitch();
  inline void clear_has_pitch();
  inline void set_has_roll();
  inline void clear_has_roll();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  float yaw_;
  float pitch_;
  float roll_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Motion_2eproto();
  friend void protobuf_AssignDesc_Motion_2eproto();
  friend void protobuf_ShutdownFile_Motion_2eproto();
  
  void InitAsDefaultInstance();
  static Motion_Gyro* default_instance_;
};
// -------------------------------------------------------------------

class Motion_WiimoteSimple_Entry : public ::google::protobuf::Message {
 public:
  Motion_WiimoteSimple_Entry();
  virtual ~Motion_WiimoteSimple_Entry();
  
  Motion_WiimoteSimple_Entry(const Motion_WiimoteSimple_Entry& from);
  
  inline Motion_WiimoteSimple_Entry& operator=(const Motion_WiimoteSimple_Entry& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Motion_WiimoteSimple_Entry& default_instance();
  
  void Swap(Motion_WiimoteSimple_Entry* other);
  
  // implements Message ----------------------------------------------
  
  Motion_WiimoteSimple_Entry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Motion_WiimoteSimple_Entry& from);
  void MergeFrom(const Motion_WiimoteSimple_Entry& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 t = 1;
  inline bool has_t() const;
  inline void clear_t();
  static const int kTFieldNumber = 1;
  inline ::google::protobuf::int32 t() const;
  inline void set_t(::google::protobuf::int32 value);
  
  // required .pb.Motion.Accel accel = 2;
  inline bool has_accel() const;
  inline void clear_accel();
  static const int kAccelFieldNumber = 2;
  inline const ::pb::Motion_Accel& accel() const;
  inline ::pb::Motion_Accel* mutable_accel();
  inline ::pb::Motion_Accel* release_accel();
  
  // required .pb.Motion.Gyro gyro = 3;
  inline bool has_gyro() const;
  inline void clear_gyro();
  static const int kGyroFieldNumber = 3;
  inline const ::pb::Motion_Gyro& gyro() const;
  inline ::pb::Motion_Gyro* mutable_gyro();
  inline ::pb::Motion_Gyro* release_gyro();
  
  // required .pb.Motion.Gyro orien = 4;
  inline bool has_orien() const;
  inline void clear_orien();
  static const int kOrienFieldNumber = 4;
  inline const ::pb::Motion_Gyro& orien() const;
  inline ::pb::Motion_Gyro* mutable_orien();
  inline ::pb::Motion_Gyro* release_orien();
  
  // @@protoc_insertion_point(class_scope:pb.Motion.WiimoteSimple.Entry)
 private:
  inline void set_has_t();
  inline void clear_has_t();
  inline void set_has_accel();
  inline void clear_has_accel();
  inline void set_has_gyro();
  inline void clear_has_gyro();
  inline void set_has_orien();
  inline void clear_has_orien();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::pb::Motion_Accel* accel_;
  ::pb::Motion_Gyro* gyro_;
  ::pb::Motion_Gyro* orien_;
  ::google::protobuf::int32 t_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_Motion_2eproto();
  friend void protobuf_AssignDesc_Motion_2eproto();
  friend void protobuf_ShutdownFile_Motion_2eproto();
  
  void InitAsDefaultInstance();
  static Motion_WiimoteSimple_Entry* default_instance_;
};
// -------------------------------------------------------------------

class Motion_WiimoteSimple : public ::google::protobuf::Message {
 public:
  Motion_WiimoteSimple();
  virtual ~Motion_WiimoteSimple();
  
  Motion_WiimoteSimple(const Motion_WiimoteSimple& from);
  
  inline Motion_WiimoteSimple& operator=(const Motion_WiimoteSimple& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Motion_WiimoteSimple& default_instance();
  
  void Swap(Motion_WiimoteSimple* other);
  
  // implements Message ----------------------------------------------
  
  Motion_WiimoteSimple* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Motion_WiimoteSimple& from);
  void MergeFrom(const Motion_WiimoteSimple& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef Motion_WiimoteSimple_Entry Entry;
  
  // accessors -------------------------------------------------------
  
  // required int32 stept = 1;
  inline bool has_stept() const;
  inline void clear_stept();
  static const int kSteptFieldNumber = 1;
  inline ::google::protobuf::int32 stept() const;
  inline void set_stept(::google::protobuf::int32 value);
  
  // repeated .pb.Motion.WiimoteSimple.Entry minseq = 2;
  inline int minseq_size() const;
  inline void clear_minseq();
  static const int kMinseqFieldNumber = 2;
  inline const ::pb::Motion_WiimoteSimple_Entry& minseq(int index) const;
  inline ::pb::Motion_WiimoteSimple_Entry* mutable_minseq(int index);
  inline ::pb::Motion_WiimoteSimple_Entry* add_minseq();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::Motion_WiimoteSimple_Entry >&
      minseq() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::Motion_WiimoteSimple_Entry >*
      mutable_minseq();
  
  // repeated .pb.Motion.WiimoteSimple.Entry maxseq = 3;
  inline int maxseq_size() const;
  inline void clear_maxseq();
  static const int kMaxseqFieldNumber = 3;
  inline const ::pb::Motion_WiimoteSimple_Entry& maxseq(int index) const;
  inline ::pb::Motion_WiimoteSimple_Entry* mutable_maxseq(int index);
  inline ::pb::Motion_WiimoteSimple_Entry* add_maxseq();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::Motion_WiimoteSimple_Entry >&
      maxseq() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::Motion_WiimoteSimple_Entry >*
      mutable_maxseq();
  
  // @@protoc_insertion_point(class_scope:pb.Motion.WiimoteSimple)
 private:
  inline void set_has_stept();
  inline void clear_has_stept();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::pb::Motion_WiimoteSimple_Entry > minseq_;
  ::google::protobuf::RepeatedPtrField< ::pb::Motion_WiimoteSimple_Entry > maxseq_;
  ::google::protobuf::int32 stept_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Motion_2eproto();
  friend void protobuf_AssignDesc_Motion_2eproto();
  friend void protobuf_ShutdownFile_Motion_2eproto();
  
  void InitAsDefaultInstance();
  static Motion_WiimoteSimple* default_instance_;
};
// -------------------------------------------------------------------

class Motion : public ::google::protobuf::Message {
 public:
  Motion();
  virtual ~Motion();
  
  Motion(const Motion& from);
  
  inline Motion& operator=(const Motion& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Motion& default_instance();
  
  void Swap(Motion* other);
  
  // implements Message ----------------------------------------------
  
  Motion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Motion& from);
  void MergeFrom(const Motion& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef Motion_Accel Accel;
  typedef Motion_Gyro Gyro;
  typedef Motion_WiimoteSimple WiimoteSimple;
  
  // accessors -------------------------------------------------------
  
  // required int32 duration = 1;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 1;
  inline ::google::protobuf::int32 duration() const;
  inline void set_duration(::google::protobuf::int32 value);
  
  // optional .pb.Motion.WiimoteSimple wiimote_simple = 100;
  inline bool has_wiimote_simple() const;
  inline void clear_wiimote_simple();
  static const int kWiimoteSimpleFieldNumber = 100;
  inline const ::pb::Motion_WiimoteSimple& wiimote_simple() const;
  inline ::pb::Motion_WiimoteSimple* mutable_wiimote_simple();
  inline ::pb::Motion_WiimoteSimple* release_wiimote_simple();
  
  // @@protoc_insertion_point(class_scope:pb.Motion)
 private:
  inline void set_has_duration();
  inline void clear_has_duration();
  inline void set_has_wiimote_simple();
  inline void clear_has_wiimote_simple();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::pb::Motion_WiimoteSimple* wiimote_simple_;
  ::google::protobuf::int32 duration_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Motion_2eproto();
  friend void protobuf_AssignDesc_Motion_2eproto();
  friend void protobuf_ShutdownFile_Motion_2eproto();
  
  void InitAsDefaultInstance();
  static Motion* default_instance_;
};
// ===================================================================


// ===================================================================

// Motion_Accel

// required float x = 1;
inline bool Motion_Accel::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Motion_Accel::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Motion_Accel::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Motion_Accel::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float Motion_Accel::x() const {
  return x_;
}
inline void Motion_Accel::set_x(float value) {
  set_has_x();
  x_ = value;
}

// required float y = 2;
inline bool Motion_Accel::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Motion_Accel::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Motion_Accel::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Motion_Accel::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float Motion_Accel::y() const {
  return y_;
}
inline void Motion_Accel::set_y(float value) {
  set_has_y();
  y_ = value;
}

// required float z = 3;
inline bool Motion_Accel::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Motion_Accel::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Motion_Accel::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Motion_Accel::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline float Motion_Accel::z() const {
  return z_;
}
inline void Motion_Accel::set_z(float value) {
  set_has_z();
  z_ = value;
}

// -------------------------------------------------------------------

// Motion_Gyro

// required float yaw = 1;
inline bool Motion_Gyro::has_yaw() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Motion_Gyro::set_has_yaw() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Motion_Gyro::clear_has_yaw() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Motion_Gyro::clear_yaw() {
  yaw_ = 0;
  clear_has_yaw();
}
inline float Motion_Gyro::yaw() const {
  return yaw_;
}
inline void Motion_Gyro::set_yaw(float value) {
  set_has_yaw();
  yaw_ = value;
}

// required float pitch = 2;
inline bool Motion_Gyro::has_pitch() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Motion_Gyro::set_has_pitch() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Motion_Gyro::clear_has_pitch() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Motion_Gyro::clear_pitch() {
  pitch_ = 0;
  clear_has_pitch();
}
inline float Motion_Gyro::pitch() const {
  return pitch_;
}
inline void Motion_Gyro::set_pitch(float value) {
  set_has_pitch();
  pitch_ = value;
}

// required float roll = 3;
inline bool Motion_Gyro::has_roll() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Motion_Gyro::set_has_roll() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Motion_Gyro::clear_has_roll() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Motion_Gyro::clear_roll() {
  roll_ = 0;
  clear_has_roll();
}
inline float Motion_Gyro::roll() const {
  return roll_;
}
inline void Motion_Gyro::set_roll(float value) {
  set_has_roll();
  roll_ = value;
}

// -------------------------------------------------------------------

// Motion_WiimoteSimple_Entry

// required int32 t = 1;
inline bool Motion_WiimoteSimple_Entry::has_t() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Motion_WiimoteSimple_Entry::set_has_t() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Motion_WiimoteSimple_Entry::clear_has_t() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Motion_WiimoteSimple_Entry::clear_t() {
  t_ = 0;
  clear_has_t();
}
inline ::google::protobuf::int32 Motion_WiimoteSimple_Entry::t() const {
  return t_;
}
inline void Motion_WiimoteSimple_Entry::set_t(::google::protobuf::int32 value) {
  set_has_t();
  t_ = value;
}

// required .pb.Motion.Accel accel = 2;
inline bool Motion_WiimoteSimple_Entry::has_accel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Motion_WiimoteSimple_Entry::set_has_accel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Motion_WiimoteSimple_Entry::clear_has_accel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Motion_WiimoteSimple_Entry::clear_accel() {
  if (accel_ != NULL) accel_->::pb::Motion_Accel::Clear();
  clear_has_accel();
}
inline const ::pb::Motion_Accel& Motion_WiimoteSimple_Entry::accel() const {
  return accel_ != NULL ? *accel_ : *default_instance_->accel_;
}
inline ::pb::Motion_Accel* Motion_WiimoteSimple_Entry::mutable_accel() {
  set_has_accel();
  if (accel_ == NULL) accel_ = new ::pb::Motion_Accel;
  return accel_;
}
inline ::pb::Motion_Accel* Motion_WiimoteSimple_Entry::release_accel() {
  clear_has_accel();
  ::pb::Motion_Accel* temp = accel_;
  accel_ = NULL;
  return temp;
}

// required .pb.Motion.Gyro gyro = 3;
inline bool Motion_WiimoteSimple_Entry::has_gyro() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Motion_WiimoteSimple_Entry::set_has_gyro() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Motion_WiimoteSimple_Entry::clear_has_gyro() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Motion_WiimoteSimple_Entry::clear_gyro() {
  if (gyro_ != NULL) gyro_->::pb::Motion_Gyro::Clear();
  clear_has_gyro();
}
inline const ::pb::Motion_Gyro& Motion_WiimoteSimple_Entry::gyro() const {
  return gyro_ != NULL ? *gyro_ : *default_instance_->gyro_;
}
inline ::pb::Motion_Gyro* Motion_WiimoteSimple_Entry::mutable_gyro() {
  set_has_gyro();
  if (gyro_ == NULL) gyro_ = new ::pb::Motion_Gyro;
  return gyro_;
}
inline ::pb::Motion_Gyro* Motion_WiimoteSimple_Entry::release_gyro() {
  clear_has_gyro();
  ::pb::Motion_Gyro* temp = gyro_;
  gyro_ = NULL;
  return temp;
}

// required .pb.Motion.Gyro orien = 4;
inline bool Motion_WiimoteSimple_Entry::has_orien() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Motion_WiimoteSimple_Entry::set_has_orien() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Motion_WiimoteSimple_Entry::clear_has_orien() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Motion_WiimoteSimple_Entry::clear_orien() {
  if (orien_ != NULL) orien_->::pb::Motion_Gyro::Clear();
  clear_has_orien();
}
inline const ::pb::Motion_Gyro& Motion_WiimoteSimple_Entry::orien() const {
  return orien_ != NULL ? *orien_ : *default_instance_->orien_;
}
inline ::pb::Motion_Gyro* Motion_WiimoteSimple_Entry::mutable_orien() {
  set_has_orien();
  if (orien_ == NULL) orien_ = new ::pb::Motion_Gyro;
  return orien_;
}
inline ::pb::Motion_Gyro* Motion_WiimoteSimple_Entry::release_orien() {
  clear_has_orien();
  ::pb::Motion_Gyro* temp = orien_;
  orien_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// Motion_WiimoteSimple

// required int32 stept = 1;
inline bool Motion_WiimoteSimple::has_stept() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Motion_WiimoteSimple::set_has_stept() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Motion_WiimoteSimple::clear_has_stept() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Motion_WiimoteSimple::clear_stept() {
  stept_ = 0;
  clear_has_stept();
}
inline ::google::protobuf::int32 Motion_WiimoteSimple::stept() const {
  return stept_;
}
inline void Motion_WiimoteSimple::set_stept(::google::protobuf::int32 value) {
  set_has_stept();
  stept_ = value;
}

// repeated .pb.Motion.WiimoteSimple.Entry minseq = 2;
inline int Motion_WiimoteSimple::minseq_size() const {
  return minseq_.size();
}
inline void Motion_WiimoteSimple::clear_minseq() {
  minseq_.Clear();
}
inline const ::pb::Motion_WiimoteSimple_Entry& Motion_WiimoteSimple::minseq(int index) const {
  return minseq_.Get(index);
}
inline ::pb::Motion_WiimoteSimple_Entry* Motion_WiimoteSimple::mutable_minseq(int index) {
  return minseq_.Mutable(index);
}
inline ::pb::Motion_WiimoteSimple_Entry* Motion_WiimoteSimple::add_minseq() {
  return minseq_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::Motion_WiimoteSimple_Entry >&
Motion_WiimoteSimple::minseq() const {
  return minseq_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::Motion_WiimoteSimple_Entry >*
Motion_WiimoteSimple::mutable_minseq() {
  return &minseq_;
}

// repeated .pb.Motion.WiimoteSimple.Entry maxseq = 3;
inline int Motion_WiimoteSimple::maxseq_size() const {
  return maxseq_.size();
}
inline void Motion_WiimoteSimple::clear_maxseq() {
  maxseq_.Clear();
}
inline const ::pb::Motion_WiimoteSimple_Entry& Motion_WiimoteSimple::maxseq(int index) const {
  return maxseq_.Get(index);
}
inline ::pb::Motion_WiimoteSimple_Entry* Motion_WiimoteSimple::mutable_maxseq(int index) {
  return maxseq_.Mutable(index);
}
inline ::pb::Motion_WiimoteSimple_Entry* Motion_WiimoteSimple::add_maxseq() {
  return maxseq_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::Motion_WiimoteSimple_Entry >&
Motion_WiimoteSimple::maxseq() const {
  return maxseq_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::Motion_WiimoteSimple_Entry >*
Motion_WiimoteSimple::mutable_maxseq() {
  return &maxseq_;
}

// -------------------------------------------------------------------

// Motion

// required int32 duration = 1;
inline bool Motion::has_duration() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Motion::set_has_duration() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Motion::clear_has_duration() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Motion::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline ::google::protobuf::int32 Motion::duration() const {
  return duration_;
}
inline void Motion::set_duration(::google::protobuf::int32 value) {
  set_has_duration();
  duration_ = value;
}

// optional .pb.Motion.WiimoteSimple wiimote_simple = 100;
inline bool Motion::has_wiimote_simple() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Motion::set_has_wiimote_simple() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Motion::clear_has_wiimote_simple() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Motion::clear_wiimote_simple() {
  if (wiimote_simple_ != NULL) wiimote_simple_->::pb::Motion_WiimoteSimple::Clear();
  clear_has_wiimote_simple();
}
inline const ::pb::Motion_WiimoteSimple& Motion::wiimote_simple() const {
  return wiimote_simple_ != NULL ? *wiimote_simple_ : *default_instance_->wiimote_simple_;
}
inline ::pb::Motion_WiimoteSimple* Motion::mutable_wiimote_simple() {
  set_has_wiimote_simple();
  if (wiimote_simple_ == NULL) wiimote_simple_ = new ::pb::Motion_WiimoteSimple;
  return wiimote_simple_;
}
inline ::pb::Motion_WiimoteSimple* Motion::release_wiimote_simple() {
  clear_has_wiimote_simple();
  ::pb::Motion_WiimoteSimple* temp = wiimote_simple_;
  wiimote_simple_ = NULL;
  return temp;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Motion_2eproto__INCLUDED
