// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GuideRibbonSpline.proto

#ifndef PROTOBUF_GuideRibbonSpline_2eproto__INCLUDED
#define PROTOBUF_GuideRibbonSpline_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "bootes/dances/proto/Stage.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GuideRibbonSpline_2eproto();
void protobuf_AssignDesc_GuideRibbonSpline_2eproto();
void protobuf_ShutdownFile_GuideRibbonSpline_2eproto();

class GuideRibbonSpline;

// ===================================================================

class GuideRibbonSpline : public ::google::protobuf::Message {
 public:
  GuideRibbonSpline();
  virtual ~GuideRibbonSpline();
  
  GuideRibbonSpline(const GuideRibbonSpline& from);
  
  inline GuideRibbonSpline& operator=(const GuideRibbonSpline& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GuideRibbonSpline& default_instance();
  
  void Swap(GuideRibbonSpline* other);
  
  // implements Message ----------------------------------------------
  
  GuideRibbonSpline* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuideRibbonSpline& from);
  void MergeFrom(const GuideRibbonSpline& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .pb.Point points = 1;
  inline int points_size() const;
  inline void clear_points();
  static const int kPointsFieldNumber = 1;
  inline const ::pb::Point& points(int index) const;
  inline ::pb::Point* mutable_points(int index);
  inline ::pb::Point* add_points();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::Point >&
      points() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::Point >*
      mutable_points();
  
  // @@protoc_insertion_point(class_scope:pb.GuideRibbonSpline)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::pb::Point > points_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_GuideRibbonSpline_2eproto();
  friend void protobuf_AssignDesc_GuideRibbonSpline_2eproto();
  friend void protobuf_ShutdownFile_GuideRibbonSpline_2eproto();
  
  void InitAsDefaultInstance();
  static GuideRibbonSpline* default_instance_;
};
// ===================================================================


// ===================================================================

// GuideRibbonSpline

// repeated .pb.Point points = 1;
inline int GuideRibbonSpline::points_size() const {
  return points_.size();
}
inline void GuideRibbonSpline::clear_points() {
  points_.Clear();
}
inline const ::pb::Point& GuideRibbonSpline::points(int index) const {
  return points_.Get(index);
}
inline ::pb::Point* GuideRibbonSpline::mutable_points(int index) {
  return points_.Mutable(index);
}
inline ::pb::Point* GuideRibbonSpline::add_points() {
  return points_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::Point >&
GuideRibbonSpline::points() const {
  return points_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::Point >*
GuideRibbonSpline::mutable_points() {
  return &points_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GuideRibbonSpline_2eproto__INCLUDED
